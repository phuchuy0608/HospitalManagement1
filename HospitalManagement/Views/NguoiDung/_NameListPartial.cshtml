@model IPagedList<NguoiDung>

@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common

@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Extensions
@using HospitalManagement.Constant

@{
    string maNguoiDung = Context.Session.GetString(SessionKey.Nguoidung.MaNguoiDung);
}

<style>
    .list-table {
        min-height: 400px
    }

    list-table table {
        border: 1px solid gray;
    }

    #thead {
        background-color: rgb(82, 183, 136);
        color: white;
    }

    .table-btn a:hover {
        transform: scale(1.075)
    }

    .table-btn .btn-status {
        background-color: rgb(17, 138, 178);
        margin-top: 20%;
        width: 30px;
    }

        .table-btn .btn-status i {
            color: white;
        }

    .listname-img {
        width: 100px;
        height: 100px;
        object-fit: cover;
        object-position: center center;
        border-radius: 3%;
    }
</style>

<div id="list">

    <div class="list-table" style="min-height:400px">
        <table class="table table-bordered text-left w-100 " style="font-size:small">
            <tr id="thead">
                <th class="col-3">
                    Họ tên
                </th>

                <th class="col-2">
                    Số điện thoại
                </th>
                <th class="col-1 text-center">
                    Chức vụ
                </th>
                <th class="col-2 text-center">
                    Hình ảnh
                </th>
                <th class="col-2 text-center">
                    Trạng thái
                </th>
                <th class="text-center">Hành động</th>
            </tr>
            @foreach (var item in ViewBag.Names as IEnumerable<NguoiDung>)
            {
                @if (Guid.Parse(maNguoiDung) != item.MaNguoiDung)
                {
                    <tr>
                        <td class="col-3"><p style="margin-top: 16%;">@item.HoTen</p></td>
                        <td class="col-2"><p style="margin-top: 25%;">@item.SDT</p></td>
                        <td class="col-1 text-center">
                            <p style="margin-top: 60%;">
                                @if (item.ChucVu == 1)
                                {
                                    @("Admin")
                                }
                                else
                                {
                                    @("User")
                                }
                            </p>
                        </td>
                        <td class="col-2 text-center">
                            <img class="listname-img" src="~/images/NguoiDung/@item.HinhAnh" />
                        </td>
                        <td class="col-2 text-center"><p style="margin-top: 25%;">@(item.TrangThai ? "Hoạt động" : "Không hoạt động")</p></td>
                        <td class="table-btn col-2 text-center">
                            <a class="btn-status btn btn-sm active" onclick="Edit('@item.MaNguoiDung')" title="Chỉnh sửa thông tin"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>
                            @if (item.TrangThai)
                            {
                                <a class="btn-status btn btn-sm active" onclick="_delete('@item.MaNguoiDung')" title="Ngừng hoạt động"> <i class="fa fa-trash"></i></a>
                            }
                            else
                            {
                                <a class="btn-status btn btn-sm active" onclick="_restore('@item.MaNguoiDung')" title="Khôi phục hoạt động"> <i class="fa fa-recycle" aria-hidden="true"></i></a>
                            }

                            <a class="btn-status btn btn-sm active" onclick="_Detail('@item.MaNguoiDung')" title="Thông tin chi tiết"> <i class="fa fa-info-circle" aria-hidden="true"></i></a>
                        </td>
                    </tr>
                }

            }
        </table>
    </div>

    <div class="text-right">
        @{
            var pageRender = new PagedListRenderOptions
            {
                MaximumPageNumbersToDisplay = 5,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                DisplayLinkToLastPage = PagedListDisplayMode.Never,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                DisplayPageCountAndCurrentLocation = false,
                UlElementClasses = new[] { "pagination" },
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" },

                ContainerDivClasses = new[] { "pagination-container" }
            };
        }
        @{
            var searchModel = ViewBag.Data as NguoiDungSearchModel;
        }
        @Html.PagedListPager((IPagedList<NguoiDung>)ViewBag.Names, page => Url.Action("PageList", new { page, KeyWordSearch = searchModel.KeyWordSearch, TrangThai = searchModel.TrangThai }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(pageRender, new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "nameListContainer" }))
    </div>
</div>







