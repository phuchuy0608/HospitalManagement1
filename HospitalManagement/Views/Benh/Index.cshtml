@model HospitalManagement.Models.BenhSearchModel
@using X.PagedList;
@using HospitalManagement.Models;
@{
    ViewData["Title"] = "QUẢN LÝ BỆNH";
    Layout = "~/Views/Shared/LayoutAdmin/LayoutAdmin.cshtml";

}

<style>
    .box {
        background-color: white;
        font-family: Arial
    }

    .box-title {
        background-color: rgb(233, 236, 239);
        height: 40px;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px
    }

        .box-title h6 {
            padding: 10px;
            font-weight: 600;
            color: rgb(108, 117, 125);
        }

    .header-left {
        left: 0 auto;
    }

    .header-right {
        padding-right: 25px;
        margin-inline-start: auto;
        text-align: right;
    }

    .form-select {
        color: gray;
    }

    .header-btn button {
        background-color: rgb(82, 183, 136);
        color: white;
        box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
    }

    .header-btn a:hover {
        background-color: rgb(118, 200, 147);
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
        transform: scale(1.1)
    }

    .form-check {
        margin-right: 25px;
    }

    .name-list {
        padding-inline: 15px;
    }

    .modal-footer .btn-save {
        background-color: rgb(82, 183, 136);
        border: none;
        color: white;
    }

    .modal-footer .btn-edit {
        background-color: rgb(82, 183, 136);
        border: none;
        color: white;
    }

    .modal-footer .btn-print {
        background-color: rgb(22, 138, 173);
        border: none;
        color: white;
    }

    .modal-footer .btn-close1 {
        background-color: rgb(239, 71, 111);
        color: white;
        border: none;
    }
</style>

<div class="box m-3">
    <div class="box-title mb-4">
        <h6>Quản lý thông tin bệnh</h6>
    </div>
    <div class="header row">

        @using (Html.BeginForm(null, null, FormMethod.Get, new { name = "frmSearch", id = "frmSearch", enctype = "multipart/form-data", @class = "d-flex flex-wrap m-2" }))
        {

            @Html.AntiForgeryToken()
                <div class="header-modal-left col-sm-8 row">
                    <div class="header-input-1 col-7">
                    @Html.EditorFor(model => model.KeyWord, new { htmlAttributes = new { @class = "mr-2 mb-2 form-control", @placeholder = "Nhập thông tin cần tìm ..." } })
                    </div>

                </div>
                <div class="header-modal-right col-sm-4 row">
                    <div class="header-btn col-7">
                        <button type="button" class="btn" onclick="Create()" id="btCreateN"><i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Tạo mới</button>
                    </div>
                    <div class="header-btn col-5">
                        <button type="button" class="btn" onclick="Clear()" id="btSeach"><i class="fa fa-refresh" aria-hidden="true"></i>&nbsp;Làm mới</button>
                    </div>
                </div>
        }

    </div>
    <div id="nameListContainer" class="mt-4" style="margin-inline: 15px;">
        <partial name="_NameListPartial" model="ViewBag.Names as IPagedList<Benh>" />

    </div>
</div>


<div id="myModal" class="modal fade">
    <div class="modal-dialog modal-fullscreen">
        Modal content
        <div class="modal-content">
            <div class="modal-body">

                <div id="myModalContent">

                </div>
            </div>


            <div class="modal-footer">
                <div class="text-right">
                    <button type="button" id="btSave" class="btn btn-save"><i class="fa fa-save"></i>&nbsp;Lưu</button>
                    <button type="button" id="btupdate" class="btn btn-edit"><i class="fa fa-save"></i>&nbsp;Cập nhật</button>                    
                    <button type="button" class="btn btn-close1" id="btclose" data-bs-dismiss="modal"><i class="fa fa-close"></i>&nbsp;Đóng</button>
                </div>
            </div>
        </div>

    </div>
</div>


@section scripts{

        <script>

            var $id = "";
            var $modal = $('#myModal');
            var $myModalContent = $("#myModalContent");
            var $modalins = $('#myModalins');
            var $myModalContentins = $("#myModalContentins");
            var $myModalTitle = $("#myModalTitle");
            var $myModalTitleins = $("#myModalTitleins");
            function gettoken() {
            var token = '@Html.AntiForgeryToken()';
            token = $(token).val();
            return token;
            }

            (function ($) {
                $.fn.serializeObject = function () {

                    var self = this,
                        json = {},
                        push_counters = {},
                        patterns = {
                            "validate": /^[a-zA-Z][a-zA-Z0-9_]*(?:\[(?:\d*|[a-zA-Z0-9_]+)\])*$/,
                            "key": /[a-zA-Z0-9_]+|(?=\[\])/g,
                            "push": /^$/,
                            "fixed": /^\d+$/,
                            "named": /^[a-zA-Z0-9_]+$/
                        };


                    this.build = function (base, key, value) {
                        base[key] = value;
                        return base;
                    };

                    this.push_counter = function (key) {
                        if (push_counters[key] === undefined) {
                            push_counters[key] = 0;
                        }
                        return push_counters[key]++;
                    };

                    $.each($(this).serializeArray(), function () {

                        // Skip invalid keys
                        if (!patterns.validate.test(this.name)) {
                            return;
                        }

                        var k,
                            keys = this.name.match(patterns.key),
                            merge = this.value,
                            reverse_key = this.name;

                        while ((k = keys.pop()) !== undefined) {

                            // Adjust reverse_key
                            reverse_key = reverse_key.replace(new RegExp("\\[" + k + "\\]$"), '');

                            // Push
                            if (k.match(patterns.push)) {
                                merge = self.build([], self.push_counter(reverse_key), merge);
                            }

                            // Fixed
                            else if (k.match(patterns.fixed)) {
                                merge = self.build([], k, merge);
                            }

                            // Named
                            else if (k.match(patterns.named)) {
                                merge = self.build({}, k, merge);
                            }
                        }

                        json = $.extend(true, json, merge);
                    });

                    return json;
                };
            })(jQuery);
            (function ($) {
                $.fn.getData = function (element) {

                    var json = this.map(function () {
                        return $(this).find(element).serializeArray()
                            .reduce((a, x) => ({ ...a, [x.name]: x.value }), {});
                    }).get();

                    return json;
                };
            })(jQuery);



            $(document).ready(

                function () {

                    $("#btSave").click(function () {

                        if ($("#frm").valid()) {
                            var obj = $("#frm").serializeObject();




                            $.ajax({
                                type: "POST",
                                url: "/Benh/Add",
                                data:
                                {
                                    __RequestVerificationToken: gettoken(),
                                    model: obj,
                                    Trieuchungs: $("#partialCTTrieuChung tr").getData('.inputCTTrieuChung')
                                },
                                success: function (result) {

                                    $('#preloader-wrapper').toggleClass('hide');
                                    if (result.status == -3) {
                                        toastr.warning(result.text);

                                    }
                                    else {
                                        if (result.status != null) {
                                            if (result.status >= 1) {

                                                toastr.success(result.text);
                                                reloadpage(1);
                                            }
                                            else {
                                                toastr.warning(result.text);
                                            }
                                        }
                                        else {
                                            $myModalContent.html(result);
                                        }
                                    }
                                },
                                error: function (errormessage) {
                                    alert(errormessage.responseText);
                                },
                                failure: function (message) {
                                    $('#preloader-box').toggleClass('hide');
                                }
                            });
                        }

                    });
                    $("#btupdate").click(function () {

                        if ($("#frm").valid()) {
                            var obj = $("#frm").serializeObject();

                            $.ajax({
                                type: "POST",
                                url: "/Benh/Edit",
                                data: {
                                    __RequestVerificationToken: gettoken(),
                                    model: obj,
                                    Trieuchungs: $("#partialCTTrieuChung tr").getData('.inputCTTrieuChung')
                                },
                                success: function (result) {

                                    $('#preloader-wrapper').toggleClass('hide');
                                    if (result.status == -3) {
                                        toastr.warning(result.text);

                                    }
                                    else {
                                        if (result.status != null) {
                                            if (result.status >= 1) {
                                                toastr.success(result.text);
                                                reloadpage(1);
                                            }
                                            else {
                                                toastr.warning(result.text);
                                            }
                                        }
                                        else {
                                            $myModalContent.html(result);
                                        }
                                    }
                                },
                                error: function (errormessage) {
                                    alert(errormessage.responseText);
                                },
                                failure: function (message) {
                                    $('#preloader-box').toggleClass('hide');
                                }
                            });
                        }

                    });
                    $("#btclose").click(function () {

                        reloadpage(1);
                    });
                    $("#btcloseins").click(function () {

                        reloadpage(1);
                    });



                });

            $(document).on('click', '.remove', function () {

                $(this).parent().parent().remove();

            });

            function AddView(child) {

                $.ajax({
                    url: '/Benh/add' + child,

                    success: function (data) {
                        $("#partial" + child).append(data);
                    }
                })
            }

            function reloadpage(page) {
                obj = {};

                obj.Page = page;
                $.ajax({
                    url: '/Benh/PageList/',

                    type: "Get",
                    timeout: 20000,

                    async: false,

                    data: obj,

                    success: function (result) {


                        $('#nameListContainer').html(result);
                    },

                    failure: function (message) {
                        $('#preloader-box').toggleClass('hide');
                    }
                });
            }


            function PrintPreview(id) {
                $.print("#" + id);
            }

            function Edit(id_) {
                $myModalContent.html("");

                $.ajax({
                    url: '/Benh/Edit/',

                    type: "Get",
                    timeout: 20000,

                    async: true,
                    data: {
                        id: id_
                    },

                    success: function (result) {
                        $myModalContent.html(result);
                        $('#btSave').hide();
                        $('#btupdate').show();
                        $('#btPrint').hide();
                        $modal.modal('show');


                        $('#preloader-box').toggleClass('hide');
                    },
                    failure: function (message) {
                        $('#preloader-box').toggleClass('hide');
                    }
                });
            }


            function Create() {

                $myModalContent.html("");

                $.ajax({
                    url: '/Benh/Add/',

                    type: "Get",
                    timeout: 20000,

                    async: true,


                    success: function (result) {
                        $myModalContent.html(result);
                        $('#btSave').show();
                        $('#btupdate').hide();
                        $('#btPrint').hide();
                        $modal.modal('show');


                        $('#preloader-box').toggleClass('hide');
                    },
                    failure: function (message) {
                        $('#preloader-box').toggleClass('hide');
                    }
                });

            }

            function _Detail(id_) {
                $myModalContent.html("");

                $.ajax({
                    url: '/Benh/Detail/',

                    type: "Get",
                    timeout: 20000,

                    async: true,
                    data: {
                        id: id_
                    },

                    success: function (result) {
                        $myModalContent.html(result);
                        $('#btSave').hide();
                        $('#btupdate').hide();
                        $('#btPrint').show();
                        $modal.modal('show');


                        $('#preloader-box').toggleClass('hide');
                    },
                    failure: function (message) {
                        $('#preloader-box').toggleClass('hide');
                    }
                });
            }



            function _delete(id) {
                var cf = confirm('Bạn muốn xoá bản ghi này?');
                if (cf) {
                    $.ajax({
                        type: "POST",
                        url: "/Benh/Delete",
                        data: { "id": id },
                        success: function (result) {
                            $('#preloader-wrapper').toggleClass('hide');
                            if (result.status >= 1) {
                                toastr.success(result.text);

                                reloadpage();
                            }
                            else {
                                toastr.warning(result.text);
                            }
                        },
                        error: function (errormessage) {
                            toastr.warning(errormessage.responseText);
                        },
                        failure: function (message) {
                            $('#preloader-wrapper').toggleClass('hide');
                        }
                    });
                }

            }

            $("#KeyWord").keyup(function () {

                obj = {};

                obj.KeyWord = $(this).val()

                obj.page = 1;
                $.ajax({
                    url: '/Benh/PageList/',

                    type: "Get",


                    data: obj,

                    success: function (result) {

                        if (result.status != 2) {


                            $('#nameListContainer').html(result);
                        }

                        $('#nameListContainer').html(result);
                    },

                    failure: function (message) {
                        $('#preloader-box').toggleClass('hide');
                    }
                });




            });


            function Clear() {

                reloadpage(1);
            }


        </script>
}




